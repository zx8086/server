import { HTTPMethod } from '../typed-fetch.js';
import { OpenAPIDocument, Router } from '../types.js';
import { ClientOptions, OASClient } from './types.js';
export declare class ClientValidationError extends Error implements AggregateError {
    readonly path: string;
    readonly method: HTTPMethod;
    errors: any[];
    response: Response;
    constructor(path: string, method: HTTPMethod, errors: any[], response: Response);
    [Symbol.iterator](): IterableIterator<any>;
}
export declare function createClient<TOAS extends OpenAPIDocument>(options: Omit<ClientOptions, 'endpoint'> & (TOAS extends {
    servers: {
        url: infer TEndpoint extends string;
    }[];
} ? {
    endpoint: TEndpoint;
} : {
    endpoint?: string;
})): OASClient<TOAS>;
export declare function createClient<TRouter extends Router<any, any, any>>(options: ClientOptions): TRouter['__client'];
